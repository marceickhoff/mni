//----------------------------------------------------------------------------------------------------------------------
// MEDIA QUERIES
//----------------------------------------------------------------------------------------------------------------------

/// Shorthand for generating single-condition media queries based on screen width.
/// @param {String} $operator - Comparison operator (one of: `>=`, `ge`, `>`, `gt`, `<`, `lt`, `<=`, `le`)
/// @param {Length} $breakpoint - Screen width
/// @param {String} $media ["all"] - Media type (`all`, `screen`, `print`, etc.)
/// @output `content`
/// @example scss Usage
///   .example {
///     width: 100px; // Default
///     @include media(">=", $breakpoint-m) {
///       width: 200px; // For viewports larger than or equal to $breakpoint-m (720px by default)
///     }
///     @include media(">", $breakpoint-l) {
///       width: 300px; // For viewports larger than $breakpoint-l (1180px by default)
///     }
///   }
/// @example css Resulting CSS
///   .example {
///     width: 100px;
///   }
///   @media all and (min-width: 720px) {
///     .example {
///       width: 200px;
///     }
///   }
///   @media all and (min-width: 1181px) {
///     .example {
///       width: 300px;
///     }
///   }
@mixin media($operator, $breakpoint, $media: all) {
	@if $operator == ">=" or $operator == "ge" {
		@media #{$media} and (min-width: $breakpoint) {
			@content;
		}
	} @else if $operator == ">" or $operator == "gt" {
		@media #{$media} and (min-width: $breakpoint + 1) {
			@content;
		}
	} @else if $operator == "<" or $operator == "lt" {
		@media #{$media} and (max-width: $breakpoint - 1) {
			@content;
		}
	} @else if $operator == "<=" or $operator == "le" {
		@media #{$media} and (max-width: $breakpoint) {
			@content;
		}
	}
}