//----------------------------------------------------------------------------------------------------------------------
// MODERNIZR SHORTHANDS
//----------------------------------------------------------------------------------------------------------------------

/// Creates a selector for targeting devices that support a specific CSS feature using [Modernizr](https://modernizr.com/).
/// @param {String} $feature - Feature name
/// @output `content`
/// @example markup Class list on body tag generated by Modernizr
///   <body class="supports-flexbox">
/// @example scss Usage
///   .example {
///     display: block; // Lame default
///     @include supports("flexbox") {
///       display: flexbox; // Exciting new feature
///     }
///   }
/// @example css Resulting CSS
///   .example {
///     display: block;
///   }
///   .supports-flexbox .example {
///     display: flex;
///   }
@mixin supports($feature) {
	@if & {
		.#{$modernizr-prefix-passed}#{$feature} & {
			@content;
		}
	} @else {
		.#{$modernizr-prefix-passed}#{$feature} {
			@content;
		}
	}
}

/// Creates a selector for targeting devices that don't support a specific CSS feature.
/// @param {String} $feature - Feature name
/// @output `content`
/// @example markup Class list on body tag generated by Modernizr
///   <body class="supports-no-flexbox">
/// @example scss Usage
///   .example {
///     display: flex; // Exciting new feature
///     @include supports-no("flexbox") {
///       display: block; // Lame fallback
///     }
///   }
/// @example css Resulting CSS
///   .example {
///     display: flex;
///   }
///   .supports-no-flexbox .example {
///     display: block;
///   }
@mixin supports-no($feature) {
	@if & {
		.#{$modernizr-prefix-failed}#{$feature} & {
			@content;
		}
	} @else {
		.#{$modernizr-prefix-failed}#{$feature} {
			@content;
		}
	}
}